version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod  # Отдельный Dockerfile для прода
    container_name: laravel_app_prod
    restart: always  # Всегда перезапускать при падении
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - ./backend/docker/php/php-fpm.conf:/usr/local/etc/php-fpm.d/www.conf
      - php-sockets:/var/run/php-fpm
    env_file:
      - ./backend/.env.prod  # Отдельный файл для прода
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=db
      - DB_PORT=5432
      # XDEBUG и dev-настройки удалены
    depends_on:
      - db
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "php", "artisan", "queue:ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    expose: 
      - 9000

  db:
    image: postgres:15-alpine  # Более легковесный образ
    container_name: postgres_db_prod
    restart: always
    env_file:
      - .env.prod
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=md5  # Безопасная аутентификация
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-backups:/backups  # Для дампов БД
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  webserver:
    image: nginx:alpine
    container_name: nginx_server_prod
    ports:
      - "80:80"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/conf.d/default.conf
      - php-sockets:/var/run/php-fpm
    depends_on:
      - frontend
      - backend
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    expose:
      - "3000"  # Важно: только expose без ports
    restart: always
    networks:
      - app_network
    # Убрали volumes (кеш Next.js будет в контейнере)
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1

volumes:
  postgres_data:
    driver: local
  laravel_storage:
    driver: local
  laravel_bootstrap_cache:
    driver: local
  next_cache:
    driver: local
  php-sockets:

networks:
  app_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16  # Фиксированная подсеть