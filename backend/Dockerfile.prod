# Stage 1: Build stage
FROM php:8.3-fpm-alpine AS builder

# Установка всех необходимых зависимостей (включая zlib и его dev-версию)
RUN apk add --no-cache \
    postgresql-dev \
    libpng-dev \
    libjpeg-turbo-dev \
    freetype-dev \
    libwebp-dev \
    libzip-dev \
    icu-dev \
    zlib \
    zlib-dev \
    pkgconf \
    make \
    g++ \
    autoconf

# Явно устанавливаем переменные окружения для zlib
ENV ZLIB_CFLAGS="-I/usr/include"
ENV ZLIB_LIBS="-L/usr/lib -lz"

# Конфигурация GD с явным указанием всех путей
RUN docker-php-ext-configure gd \
    --with-freetype=/usr/include/ \
    --with-jpeg=/usr/include/ \
    --with-webp=/usr/include/

RUN docker-php-ext-install -j$(nproc) \
    pdo \
    pdo_pgsql \
    gd \
    zip \
    intl \
    opcache \
    pcntl

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY --chown=www-data:www-data . /var/www
WORKDIR /var/www

RUN composer install --optimize-autoloader --no-interaction --no-progress --no-scripts

# Stage 2: Production image
FROM php:8.3-fpm-alpine

# Установка только runtime зависимостей
RUN apk add --no-cache \
    libpng \
    libjpeg-turbo \
    freetype \
    libwebp \
    libzip \
    icu \
    zlib

# Копируем скомпилированные расширения из builder
COPY --from=builder /usr/local/lib/php/extensions/no-debug-non-zts-20230831/* /usr/local/lib/php/extensions/no-debug-non-zts-20230831/

# Копируем PHP конфигурацию
COPY docker/php/php.ini /usr/local/etc/php/conf.d/php.ini
COPY docker/php/php-fpm.conf /usr/local/etc/php-fpm.d/www.conf

# Копируем приложение
COPY --from=builder --chown=www-data:www-data /var/www /var/www

# Настраиваем права
RUN mkdir -p /var/www/storage/framework/{cache,sessions,views} && \
    mkdir -p /var/www/bootstrap/cache && \
    chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache

USER www-data
WORKDIR /var/www

RUN php artisan config:cache && \
    php artisan route:cache && \
    php artisan view:cache

CMD ["php-fpm"]