FROM php:8.3-fpm-alpine

# Установка системных зависимостей
RUN apk add --no-cache \
    libpng-dev \
    libjpeg-turbo-dev \
    freetype-dev \
    libzip-dev \
    postgresql-dev \
    icu-dev \
    git \
    unzip \
    bash

# Настройка PHP расширений
RUN docker-php-ext-configure gd --with-freetype --with-jpeg && \
    docker-php-ext-install -j$(nproc) \
    pdo pdo_pgsql \
    gd \
    zip \
    intl \
    opcache \
    pcntl

# Установка Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Создание пользователя
RUN addgroup -g 1000 www && \
    adduser -u 1000 -G www -h /var/www -D www

WORKDIR /var/www

# Копируем только composer файлы
COPY --chown=www:www composer.json composer.lock ./

# Установка зависимостей с обработкой ошибок
RUN set -eux; \
    mkdir -p /var/www/database; \
    touch /var/www/database/.gitkeep; \
    composer install --no-dev --optimize-autoloader --no-interaction --ignore-platform-reqs || { \
        echo "Composer install failed, retrying..."; \
        composer clear-cache; \
        composer install --no-dev --optimize-autoloader --no-interaction --ignore-platform-reqs; \
    }

# Копируем остальные файлы
COPY --chown=www:www . .

# Настройка прав
RUN mkdir -p storage/framework/{cache,sessions,views} storage/logs && \
    chown -R www:www storage bootstrap/cache && \
    chmod -R 775 storage bootstrap/cache

USER www

# Оптимизация Laravel
RUN php artisan config:cache && \
    php artisan route:cache && \
    php artisan view:cache

EXPOSE 9000
CMD ["php-fpm"]